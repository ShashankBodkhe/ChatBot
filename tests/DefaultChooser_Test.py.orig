import unittest
from newitbot import JidHandle
from newitbot.DefaultRecipientChooser import DefaultRecipientChooser
from ludibrio import Mock

class DefaultChooserTest(unittest.TestCase):
    
    __MyConfig = None

    def setUp(self):
        unittest.TestCase.setUp(self)
    
    def tearDown(self):
        unittest.TestCase.tearDown(self)
        
    def test_returns_first_jid_handle_retrieved_from_config_when_there_are_multiple(self):
        ExpectedJidHandles = self.__given_multiple_jid_handles_in_configuration()
        
        MyChooser = DefaultRecipientChooser(self.__MyConfig)
        
        self.assertEquals([ExpectedJidHandles[0]], MyChooser.getRecipientJidHandles())

    def __given_multiple_jid_handles_in_configuration(self):
        ExpectedJidHandles = []
        ExpectedJidHandles.append(JidHandle.JidHandle('someUserName', 'someJid'))
        ExpectedJidHandles.append(JidHandle.JidHandle('someOtherUserName', 'someOtherJid'))
        with Mock() as MockedConfig:
            MockedConfig.getJidHandles() >> ExpectedJidHandles
            
        self.__MyConfig = MockedConfig
        return ExpectedJidHandles
    
if __name__ == '__main__':
    unittest.main()